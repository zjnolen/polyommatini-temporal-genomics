---
title: "Figure 2: Population structure and inbreeding"
format:
  html:
    code-fold: true
---

The second figure focuses on changes in population structure over time in the
three focal species.

```{r}
#| label: load-packages

library(ggplot2) # For general plotting
library(data.table) # For reading in data tables without reading in all columns
library(stringr) # For subsetting metadata strings
library(cowplot) # For arranging plots
library(gridExtra) # For plotting grobs for admix
library(dplyr) # For merging dataframes
library(ggh4x) # For nested ggplot facets
library(ggtext) # For markdown syntax in ggplot

species <- c("picarus", "pargus", "csemiargus")
genomes <- c("ilPolIcar1.1", "ilPleArgu1.3", "ilCyaSemi1.1")
```

# PCA

Visualization of population structure using principal component analysis. This
just plots PCs 1&2 for each species. The covariance matrix for the genetic data
was prepared using PCAngsd, which uses genotype likelihoods for SNPs in the
dataset as input. We removed one individual for each pair of highly related
individuals in the dataset, as these skew the analyses.

```{r}
#| label: fig-pca

regs <- c("WSkane", "SWSkane", "ESkane", "SESkane", "NSmaland", "Oland")
regs_named <- c(
  "W Skåne", "SW Skåne", "E Skåne", "SE Skåne", "N Småland",
  "Öland"
)
regs_cols <- c("#244F6E", "#244F6E", "#658399", "#658399", "#8A2A3B", "#fecd03")

pcas <- list()

# read in PCAngsd covariance results and compute PCs
for (i in c(1:length(species))) {
  s <- species[i]
  g <- genomes[i]
  cov <- as.matrix(read.table(
    paste0(
      "../angsd/results/datasets/historical-",
      s,
      "-notrans/analyses/pcangsd/historical-",
      s,
      "-notrans.",
      g,
      "_all_excl_pca-admix_allsites-filts.cov"
    ),
    header = FALSE,
  ))
  pop <- fread(
    paste0(
      "../angsd/results/datasets/historical-",
      s,
      "-notrans/poplists/historical-",
      s,
      "-notrans_all_excl_pca-admix.indiv.list"
    ),
    header = TRUE,
    sep = "\t",
    select = c("sample", "population", "time")
  )
  e <- eigen(cov)
  pc_var <- round((e$values / sum(e$values)) * 100, 2)
  pc <- data.frame(e$vectors)
  pc$sample <- pop$sample
  pc <- merge(pc, pop, by = "sample")
  pc$species <- s
  pc$region <- str_sub(pc$population, 1, -5)
  species_regs_index <- match(unique(pc$region), regs)
  species_regs <- regs[species_regs_index]
  species_regs_names <- regs_named[species_regs_index]
  species_regs_colors <- regs_cols[species_regs_index]

  pc$species <- factor(
    pc$species,
    levels = species,
    labels = c("P. icarus", "P. argus", "C. semiargus")
  )

  pc$time <- factor(
    pc$time,
    levels = c("modern", "historical"),
    labels = c("Modern", "Historical")
  )

  pc$region <- factor(
    pc$region,
    levels = species_regs,
    labels = species_regs_names
  )

  pcas[[s]] <- ggplot(pc, aes(
    x = X1, y = X2, color = region, shape = time,
    fill = region
  )) +
    facet_grid(cols = vars(species)) +
    geom_point(size = 4, stroke = 1) +
    scale_shape_manual(
      values = c(21, 24)
    ) +
    scale_color_manual(
      values = species_regs_colors,
      name = "Geographic Region"
    ) +
    scale_fill_manual(
      values = alpha(species_regs_colors, 0.7)
    ) +
    xlab(paste0("PC1 (", pc_var[1], "%)")) +
    ylab(paste0("PC2 (", pc_var[2], "%)")) +
    theme_bw() +
    theme(
      panel.grid.major = element_blank(),
      panel.grid.minor = element_blank(),
      strip.text.x = element_text(size = 10, face = "italic"),
      legend.position = "none",
      aspect.ratio = 1
    )
}

pcas <- plot_grid(
  pcas[["picarus"]],
  pcas[["pargus"]],
  pcas[["csemiargus"]],
  ncol = 3, nrow = 1
)
```

# Admixture

We additionally check for population structure using an admixture analysis
performed using NGSadmix, which uses the same genotype likelihood input as
PCAngsd. We plot the best fit K for each of the three species, skipping K = 1 if
it is best fit and plotting K = 2 instead. We defined the best fit as the
highest K for which 100 replicate runs of NGSadmix converged at least 3 times.

```{r}
#| label: fig-admixture

best_fit_ks <- c(2, 1, 5)

regs <- c("WSkane", "SWSkane", "ESkane", "SESkane", "NSmaland", "Oland")
regs_named <- c(
  "W Skåne", "SW Skåne", "E Skåne", "SE Skåne", "N Småland",
  "Öland"
)

colors <- list()
colors[["picarus"]] <- c("#658399", "#244F6E")
colors[["pargus"]] <- c("#8A2A3B", "#244F6E")
colors[["csemiargus"]] <- c("#658399", "#8A2A3B", "#244F6E", "#A7B8C5", "#B5B6B7")

admix <- list()

for (i in c(1:length(species))) {
  s <- species[i]
  g <- genomes[i]
  k <- best_fit_ks[i]

  if (k == 1) {
    k <- 2
  }

  qopt <- read.table(paste0(
    "../angsd/results/datasets/historical-",
    s,
    "-notrans/analyses/ngsadmix/historical-",
    s,
    "-notrans.",
    g,
    "_all_excl_pca-admix_allsites-filts_K",
    k,
    ".qopt"
  ))

  pop <- as.data.frame(fread(
    paste0(
      "../angsd/results/datasets/historical-",
      s,
      "-notrans/poplists/historical-",
      s,
      "-notrans_all_excl_pca-admix.indiv.list"
    ),
    header = TRUE,
    sep = "\t",
    select = c("sample", "population", "time")
  ))

  qopt$sample <- pop$sample

  qopt <- reshape2::melt(as.data.table(inner_join(qopt, pop)))
  qopt$region <- str_sub(qopt$population, 1, -5)
  qopt$year <- str_sub(qopt$population, -4, -1)
  species_regs_index <- match(unique(qopt$region), regs)
  species_regs <- regs[sort(species_regs_index)]
  species_regs_names <- regs_named[sort(species_regs_index)]

  qopt$time <- factor(
    qopt$time,
    levels = c("historical", "modern"),
    labels = c("Historical", "Modern")
  )

  qopt$region <- factor(
    qopt$region,
    levels = species_regs,
    labels = species_regs_names
  )

  qopt$population <- paste0(qopt$region, " ", qopt$year)

  pops <- unique(qopt$population)

  qopt$population <- factor(
    qopt$population,
    levels = pops[order(match(str_sub(pops, 1, -6), regs_named))]
  )

  sp_name <- c("P. icarus", "P. argus", "C. semiargus")[i]

  admix[[s]] <- ggplot(qopt, aes(value, fill = variable, x = sample)) +
    geom_bar(position = "fill", stat = "identity", width = 1, color = "black") +
    facet_nested(~ time + population,
      scales = "free", space = "free",
      nest_line = TRUE
    ) +
    ylab(paste0("*", sp_name, "*<br>K = ", k)) +
    guides(fill = "none") +
    scale_y_continuous(expand = c(0, 0), breaks = seq(0, 1, by = 0.2)) +
    scale_fill_manual(values = colors[[s]]) +
    theme_classic() +
    theme(
      axis.title.y = element_markdown(lineheight = 1.2),
      strip.text.x = element_text(size = 8),
      strip.background = element_blank(),
      axis.title.x = element_blank(),
      axis.text.x = element_blank(),
      axis.line.x = element_blank(),
      axis.ticks.x = element_blank(),
      plot.margin = unit(c(0, 0.1, 0.1, 0.3), "cm")
    )
}

admixes <- plot_grid(
  admix[["picarus"]],
  admix[["pargus"]],
  admix[["csemiargus"]],
  ncol = 1, nrow = 3
)
```

## Inbreeding for *C. semiargus*

As *C. semiargus* samples are the only ones with substantial inbreeding, we will
only plot *RoH* size classes for it. These size classes show how much of each
individual's inbreeding coefficient stems from *RoH* within a certain size
range, which corresponds to the recency of the inbreeding event.

```{r}
#| label: fig-csemiargus-roh

rohs <- read.table("../angsd/results/datasets/historical-csemiargus-notrans/analyses/roh/bcftools/historical-csemiargus-notrans.ilCyaSemi1.1_all_allsites-filts.filtered_mindp6-biallelic.notrans.fmiss0.2.regs.roh")

colnames(rohs) <- c(
  "type", "sample", "chr", "start", "end", "length",
  "inform_sites", "phred"
)

rohs <- rohs[rohs$length >= 100000 & rohs$phred >= 85, ]

inds <- read.table(
  "../angsd/results/datasets/historical-csemiargus-notrans/poplists/historical-csemiargus-notrans_all.indiv.list",
  header = TRUE
)


norun <- c()
norun$type <- rep("RG", nrow(inds))
norun$sample <- inds$sample
norun$chr <- rep(0, nrow(inds))
norun$start <- rep(0, nrow(inds))
norun$end <- rep(0, nrow(inds))
norun$length <- rep(0, nrow(inds))
norun$inform_sites <- rep(0, nrow(inds))
norun$phred <- rep(0, nrow(inds))
norun <- data.frame(norun)

# generations <- c(1, 20, 40, 80, 100, 100000000)

autosize <- 416794061

bins <- c(Inf, 6000000, 3000000, 1500000, 500000, 100000)

frohs <- c()
ranges <- c()

for (i in seq(length(bins))) {
  if (i <= length(bins) - 1) {
    runs <- rohs[rohs$length < bins[i], ]
    runs <- runs[runs$length >= bins[i + 1], ]
    runs <- rbind(runs, norun)
    runs <- runs %>%
      group_by(sample) %>%
      summarize(length = sum(length))
    runs <- merge(runs, inds, by = "sample")
    runs$froh <- runs$length / autosize
    runs$range <- paste0(bins[i], "-", bins[i + 1])
    ranges <- c(ranges, paste0(bins[i], "-", bins[i + 1]))
    frohs <- rbind(frohs, runs)
  }
}

range_labels <- rev(c("0.1-0.5", "0.5-1.5", "1.5-3", "3-6", ">6"))
frohs$range <- as.factor(frohs$range)
frohs$range <- factor(frohs$range, levels = ranges, labels = range_labels)

indfroh <- frohs %>%
  group_by(sample) %>%
  summarize(froh = sum(froh))

frohs$sample <- factor(frohs$sample, levels = indfroh$sample[order(indfroh$froh)])

popord <- c(
  "WSkane1951", "ESkane1956", "NSmaland1936", "WSkane2021", "ESkane2021",
  "SESkane2022", "NSmaland2021"
)

poplab <- c(
  "W Skåne\n1951", "E Skåne\n1956", "N Småland\n1936", "W Skåne\n2021",
  "E Skåne\n2021", "SE Skåne\n2022", "N Småland\n2021"
)

frohs$population <- factor(frohs$population, levels = popord, labels = poplab)
frohs$time <- factor(frohs$time,
  levels = c("historical", "modern"),
  labels = c("Historical", "Modern")
)

frohplot <- ggplot(
  data = frohs, aes(x = sample, y = froh, alpha = range), fill = "black"
) +
  geom_bar(position = "stack", stat = "identity") +
  facet_nested(~ time + population,
    scales = "free_x", space = "free",
    nest_line = TRUE
  ) +
  theme_bw() +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 0.35)) +
  scale_alpha_discrete(range = c(1, 0.4)) +
  labs(y = "*F~RoH~* (*C. semiargus*)", alpha = "*RoH* size (Mb)") +
  theme(
    legend.position = "bottom",
    strip.background = element_blank(),
    axis.text.x = element_blank(),
    axis.title.y = element_markdown(),
    legend.title = element_markdown(),
    axis.title.x = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
  )
```

## Combined figure

We again use cowplot to arrange these figures together.

```{r}
#| label: fig-structure
#| fig-width: 10
#| fig-height: 9

plot_grid(
  pcas,
  admixes,
  ncol = 1,
  nrow = 2,
  rel_heights = c(2, 2.5),
  labels = c("AUTO"),
  scale = c(1, 0.99)
)

ggsave("../figures/pop-structure.png", dpi = 600, create.dir = TRUE, bg = 'white')
```