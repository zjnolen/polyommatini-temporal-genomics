---
title: "Population structure"
format:
  html:
    code-fold: true
---

The second figure focuses on changes in population structure over time in the
three focal species.

```{r}
#| label: load-packages

library(ggplot2) # For general plotting
library(data.table) # For reading in data tables without reading in all columns
library(stringr) # For subsetting metadata strings
library(cowplot) # For arranging plots
library(gridExtra) # For plotting grobs for admix
library(dplyr) # For merging dataframes
library(ggh4x) # For nested ggplot facets
library(ggtext) # For markdown syntax in ggplot
library(ggpubr) #for bgcolor

species <- c("picarus", "pargus", "csemiargus")
genomes <- c("ilPolIcar1.1", "ilPleArgu1.3", "ilCyaSemi1.1")
```

# PCA

Visualization of population structure using principal component analysis. This
just plots PCs 1&2 for each species. The covariance matrix for the genetic data
was prepared using PCAngsd, which uses genotype likelihoods for SNPs in the
dataset as input. We removed one individual for each pair of highly related
individuals in the dataset, as these skew the analyses.

```{r}
#| label: fig-pca

regs <- c("WSkane", "SWSkane", "ESkane", "SESkane", "NSmaland", "Oland")
regs_named <- c(
  "W Skåne", "SW Skåne", "E Skåne", "SE Skåne", "Småland",
  "Öland"
)
regs_cols <- c("#244F6E", "#244F6E", "#658399", "#658399", "#8A2A3B", "#fecd03")

pcas <- list()

# read in PCAngsd covariance results and compute PCs
for (i in c(1:length(species))) {
  s <- species[i]
  g <- genomes[i]
  cov <- as.matrix(read.table(
    paste0(
      "../angsd/results/datasets/historical-",
      s,
      "-notrans/analyses/pcangsd/historical-",
      s,
      "-notrans.",
      g,
      "_all_excl_pca-admix_allsites-filts.cov"
    ),
    header = FALSE,
  ))
  pop <- fread(
    paste0(
      "../angsd/results/datasets/historical-",
      s,
      "-notrans/poplists/historical-",
      s,
      "-notrans_all_excl_pca-admix.indiv.list"
    ),
    header = TRUE,
    sep = "\t",
    select = c("sample", "population", "time")
  )
  e <- eigen(cov)
  pc_var <- round((e$values / sum(e$values)) * 100, 2)
  pc <- data.frame(e$vectors)
  pc$sample <- pop$sample
  pc <- merge(pc, pop, by = "sample")
  pc$species <- s
  pc$region <- str_sub(pc$population, 1, -5)
  species_regs_index <- match(unique(pc$region), regs)
  species_regs <- regs[species_regs_index]
  species_regs_names <- regs_named[species_regs_index]
  species_regs_colors <- regs_cols[species_regs_index]

  pc$species <- factor(
    pc$species,
    levels = species,
    labels = c("Po. icarus", "Pl. argus", "Cy. semiargus")
  )

  pc$time <- factor(
    pc$time,
    levels = c("modern", "historical"),
    labels = c("Modern", "Historical")
  )

  pc$region <- factor(
    pc$region,
    levels = species_regs,
    labels = species_regs_names
  )

  pcas[[s]] <- ggplot(pc, aes(
    x = X1, y = X2, color = region, shape = time,
    fill = region
  )) +
    facet_grid(cols = vars(species)) +
    geom_point(size = 4, stroke = 1) +
    scale_shape_manual(
      values = c(21, 24)
    ) +
    scale_color_manual(
      values = species_regs_colors,
      name = "Geographic Region"
    ) +
    scale_fill_manual(
      values = alpha(species_regs_colors, 0.7)
    ) +
    xlab(paste0("PC1 (", pc_var[1], "%)")) +
    ylab(paste0("PC2 (", pc_var[2], "%)")) +
    theme_bw() +
    theme(
      panel.grid.major = element_blank(),
      panel.grid.minor = element_blank(),
      strip.text.x = element_text(size = 10, face = "italic"),
      legend.position = "none",
      aspect.ratio = 1
    )
}

pcas <- plot_grid(
  pcas[["picarus"]],
  pcas[["pargus"]],
  pcas[["csemiargus"]],
  ncol = 3, nrow = 1
)
```

# Admixture

We additionally check for population structure using an admixture analysis
performed using NGSadmix, which uses the same genotype likelihood input as
PCAngsd. We plot the best fit K for each of the three species, skipping K = 1 if
it is best fit and plotting K = 2 instead. We defined the best fit as the
highest K for which 100 replicate runs of NGSadmix converged at least 3 times.

```{r}
#| label: fig-admixture

best_fit_ks <- c(2, 2, 5)

regs <- c(
  "Skane", "WSkane", "SWSkane", "ESkane", "SESkane", "NSmaland", "Oland"
)
regs_named <- c(
  "Skåne", "W Skåne", "SW Skåne", "E Skåne", "SE Skåne", "Småland", "Öland"
)

colors <- list()
colors[["picarus"]] <- c("#658399", "#244F6E")
colors[["pargus"]] <- c("#244F6E", "#8A2A3B")
colors[["csemiargus"]] <- c("#658399", "#8A2A3B", "#244F6E", "#A7B8C5", "#B5B6B7")

admix <- list()

for (i in c(1:length(species))) {
  s <- species[i]
  g <- genomes[i]
  k <- best_fit_ks[i]

  if (k == 1) {
    k <- 2
  }

  qopt <- read.table(paste0(
    "../angsd/results/datasets/historical-",
    s,
    "-notrans/analyses/ngsadmix/historical-",
    s,
    "-notrans.",
    g,
    "_all_excl_pca-admix_allsites-filts_K",
    k,
    ".qopt"
  ))

  pop <- as.data.frame(fread(
    paste0(
      "../angsd/results/datasets/historical-",
      s,
      "-notrans/poplists/historical-",
      s,
      "-notrans_all_excl_pca-admix.indiv.list"
    ),
    header = TRUE,
    sep = "\t",
    select = c("sample", "population", "time")
  ))

  pop[pop$population == "ESkane1917", "population"] <- "Skane"
  pop[pop$population == "WSkane1943", "population"] <- "Skane"

  qopt$sample <- pop$sample

  qopt <- reshape2::melt(as.data.table(inner_join(qopt, pop)))
  qopt$region <- str_sub(qopt$population, 1, -5)
  qopt$year <- str_sub(qopt$population, -4, -1)
  qopt[qopt$region == "S", "year"] <- "1917/43"
  qopt[qopt$region == "S", "region"] <- "Skane"
  species_regs_index <- match(unique(qopt$region), regs)
  species_regs <- regs[sort(species_regs_index)]
  species_regs_names <- regs_named[sort(species_regs_index)]

  qopt$time <- factor(
    qopt$time,
    levels = c("historical", "modern"),
    labels = c("Historical", "Modern")
  )

  qopt$region <- factor(
    qopt$region,
    levels = species_regs,
    labels = species_regs_names
  )

  qopt$population <- paste0(qopt$region, "\n", qopt$year)

  pops <- unique(qopt$population)

  qopt$population <- factor(
    qopt$population,
    levels = pops[order(match(str_extract(pops, "[^\n]+"), regs_named))]
  )

  # In Pl. argus, make sure that the Skåne samples are in the right order in
  # the plot (i.e. 1917 before 43 to line up with the year label)
  if (s == "pargus") {
    qopt$sample <- factor(
      qopt$sample,
      levels = c("MZLU153003", unique(qopt[qopt$sample != "MZLU153003", ]$sample))
    )
  }

  sp_name <- c("Po. icarus", "Pl. argus", "Cy. semiargus")[i]

  admix[[s]] <- ggplot(qopt, aes(value, fill = variable, x = sample)) +
    geom_bar(position = "fill", stat = "identity", width = 1, color = "black") +
    facet_nested(~ time + population,
      scales = "free", space = "free",
      nest_line = TRUE
    ) +
    ylab(paste0("*", sp_name, "*<br>K = ", k)) +
    guides(fill = "none") +
    scale_y_continuous(expand = c(0, 0), breaks = seq(0, 1, by = 0.2)) +
    scale_fill_manual(values = colors[[s]]) +
    theme_classic() +
    theme(
      axis.title.y = element_markdown(lineheight = 1.2),
      strip.text.x = element_text(size = 8),
      strip.background = element_blank(),
      axis.title.x = element_blank(),
      axis.text.x = element_blank(),
      axis.line.x = element_blank(),
      axis.ticks.x = element_blank(),
      plot.margin = unit(c(0, 0.1, 0.1, 0.3), "cm")
    )
}

admixes <- plot_grid(
  admix[["picarus"]],
  admix[["pargus"]],
  admix[["csemiargus"]],
  ncol = 1, nrow = 3
)
```

Additionally, generate admix plots for all values of K per species to put in the
supplementary materials.

```{r}
#| label: suppfig-admix
#| fig-height: 8
#| fig-width: 6

# Read in evaladmix functions
source("https://raw.githubusercontent.com/GenisGE/evalAdmix/2a51aebaca70c9d3b5fb359d6c5c40145c58fce5/visFuns.R")

for (i in c(1:length(species))) {
  s <- species[i]
  g <- genomes[i]

  admix <- list()
  resids <- list()

  sp_name <- c("Po. icarus", "Pl. argus", "Cy. semiargus")[i]

  pop <- as.data.frame(fread(
    paste0(
      "../angsd/results/datasets/historical-",
      s,
      "-notrans/poplists/historical-",
      s,
      "-notrans_all_excl_pca-admix.indiv.list"
    ),
    header = TRUE,
    sep = "\t",
    select = c("sample", "population", "time")
  ))

  pop[pop$population == "ESkane1917", "population"] <- "Skane"
  pop[pop$population == "WSkane1943", "population"] <- "Skane"

  for (k in c(2:10)) {
    qopt <- read.table(paste0(
      "../angsd/results/datasets/historical-",
      s,
      "-notrans/analyses/ngsadmix/historical-",
      s,
      "-notrans.",
      g,
      "_all_excl_pca-admix_allsites-filts_K",
      k,
      ".qopt"
    ))

    q <- read.table(
      paste0(
        "../angsd/results/datasets/historical-",
        s,
        "-notrans/analyses/ngsadmix/historical-",
        s,
        "-notrans.",
        g,
        "_all_excl_pca-admix_allsites-filts_K",
        k,
        ".qopt"
      ),
      stringsAsFactors = TRUE
    )

    qopt$sample <- pop$sample

    qopt <- reshape2::melt(as.data.table(inner_join(qopt, pop)))
    qopt$region <- str_sub(qopt$population, 1, -5)
    qopt$year <- str_sub(qopt$population, -4, -1)
    qopt[qopt$region == "S", "year"] <- "1917/43"
    qopt[qopt$region == "S", "region"] <- "Skane"
    species_regs_index <- match(unique(qopt$region), regs)
    species_regs <- regs[sort(species_regs_index)]
    species_regs_names <- regs_named[sort(species_regs_index)]

    qopt$time <- factor(
      qopt$time,
      levels = c("historical", "modern"),
      labels = c("Historical", "Modern")
    )

    qopt$region <- factor(
      qopt$region,
      levels = species_regs,
      labels = species_regs_names
    )

    qopt$origpop <- qopt$population
    qopt$population <- paste0(qopt$region, "\n", qopt$year)

    pops <- unique(qopt$population)

    qopt$population <- factor(
      qopt$population,
      levels = pops[order(match(str_extract(pops, "[^\n]+"), regs_named))]
    )

    # In Pl. argus, make sure that the Skåne samples are in the right order in
    # the plot (i.e. 1917 before 43 to line up with the year label)
    if (s == "pargus") {
      qopt$sample <- factor(
        qopt$sample,
        levels = c("MZLU153003", unique(qopt[qopt$sample != "MZLU153003", ]$sample))
      )
    }

    if (k == 2) {
      striptext <- element_text(size = 8)
    } else {
      striptext <- element_text(size = 0)
    }

    admix[[k]] <- ggplot(qopt, aes(value, fill = variable, x = sample)) +
      geom_bar(position = "fill", stat = "identity", width = 1, color = "black") +
      facet_nested(~ time + population,
        scales = "free", space = "free",
        nest_line = TRUE
      ) +
      ylab(paste0("K = ", k)) +
      guides(fill = "none") +
      scale_y_continuous(expand = c(0, 0), breaks = seq(0, 1, by = 0.2)) +
      theme_classic() +
      theme(
        axis.title.y = element_markdown(lineheight = 1.2),
        strip.text.x = striptext,
        strip.background = element_blank(),
        axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.line.x = element_blank(),
        axis.ticks.x = element_blank(),
        plot.margin = unit(c(0, 0, 0, 0), "cm")
      )

    ord <- orderInds(
      pop = as.vector(qopt[qopt$variable == "V1", ]$population),
      popord = pops[order(match(str_extract(pops, "[^\n]+"), regs_named))]
    )

    r <- as.matrix(
      read.table(
        paste0(
          "../angsd/results/datasets/historical-",
          s,
          "-notrans/analyses/ngsadmix/historical-",
          s,
          "-notrans.",
          g,
          "_all_excl_pca-admix_allsites-filts_K",
          k,
          ".corres"
        )
      )
    )

    png(
      paste0("../figures/suppfig-evaladmix-", s, "-K", k, ".png"),
      height = 600,
      width = 700
    )
    plotCorRes(
      cor_mat = r,
      pop = as.vector(qopt[qopt$variable == "V1", ]$population),
      ord = ord,
      title = paste0("K=", k),
      rotatelabpop = 45,
      min_z = -0.1,
      max_z = 0.1
    )
    dev.off()
  }
  title <- ggdraw() +
    draw_label(
      sp_name,
      fontface = "bold.italic",
      x = 0,
      hjust = 0
    ) +
    theme(
      plot.margin = margin(0, 0, 0, 7)
    )
  plot_grid(
    title,
    admix[[2]],
    admix[[3]],
    admix[[4]],
    admix[[5]],
    admix[[6]],
    admix[[7]],
    admix[[8]],
    admix[[9]],
    admix[[10]],
    nrow = 10,
    ncol = 1,
    rel_heights = c(0.2, 1, rep(0.6, 8))
  ) + ggtitle(sp_name)
  ggsave(paste0(
    "../figures/suppfig-admix-", s, ".png"
  ), dpi = 300, create.dir = TRUE)
}
```


## Admixture correlations of residuals

To assess model fit, we can look at the correlation of residuals for each of the
admixture models. This can show us if there is more or less population structure
suggested in our data than the model suggests.

```{r}
#| label: suppfig-evaldmix
#| evaluate: false

# source evaladmix functions
source("https://raw.githubusercontent.com/GenisGE/evalAdmix/2a51aebaca70c9d3b5fb359d6c5c40145c58fce5/visFuns.R")

s <- "csemiargus"
g <- "ilCyaSemi1.1"

pop <- read.table(
  paste0(
    "../angsd/results/datasets/historical-",
    s,
    "-notrans/poplists/historical-",
    s,
    "-notrans_all_excl_pca-admix.indiv.list"
  ),
  header = TRUE
)

pop$region <- str_sub(pop$population, 1, -5)
pop$year <- str_sub(pop$population, -4, -1)
pop$region <- factor(
  pop$region,
  levels = species_regs,
  labels = species_regs_names
)

pop$population <- paste0(pop$region, " ", pop$year)

for (k in c(2:10)) {
  q <- read.table(
    paste0(
      "../angsd/results/datasets/historical-",
      s,
      "-notrans/analyses/ngsadmix/historical-",
      s,
      "-notrans.",
      g,
      "_all_excl_pca-admix_allsites-filts_K", k, ".qopt"
    ),
    stringsAsFactors = T
  )

  popord <- unique(pop$population)

  ord <- orderInds(pop = as.vector(pop[, 2]), q = q, popord = popord)

  plotAdmix(
    q,
    pop = as.vector(pop[, 2]),
    ord = ord,
    colorpal = c("#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00", "#FFFF33", "#A65628", "#F781BF", "#999999", "black"),
    main = "",
  )
}
```

## Combined figure

We again use cowplot to arrange these figures together.

```{r}
#| label: fig-structure
#| fig-width: 10
#| fig-height: 9

plot_grid(
  pcas,
  admixes,
  ncol = 1,
  nrow = 2,
  rel_heights = c(2, 2.5),
  labels = c("AUTO"),
  scale = c(1, 0.99)
) + bgcolor("white")

ggsave("../figures/fig-structure.png", dpi = 600, create.dir = TRUE)
```